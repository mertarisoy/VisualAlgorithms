@{
    ViewBag.Title = "Depth First Search";
}

<h2>Depth First Search</h2>

<div class="row">

    <div class="col-md-3 col-lg-3">
        <ul class="nav nav-tabs">
            <li class="active"><a data-target="#pseudo" data-toggle="tab">@ResManager.GetResource("Pseudo")</a></li>
            <li><a data-target="#csharp" data-toggle="tab">@ResManager.GetResource("CSharp")</a></li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="pseudo">
                <pre style="overflow: auto; max-height:41.5em; min-height:41.5em;">
<code class="line-numbers language-markup">
DFS(G)
    for each vertex u ∈ G, V
        u.color = WHITE
        u.&#960; = NIL
    time = 0
    for each vertex u ∈ G, V
        if u.color == WHITE
            DFS-Visit(G, u)

DFS-Visit(G, u)
    time = time + 1
    u.d = time
    u.color = GRAY
    for each v ∈ G.Adj[u]
        if v.color == WHITE
            v.&#960; = u
            DFS-Visit(G, v)
    u.color = BLACK
    time = time + 1
    u.f = time
</code>
                </pre>
            </div>
            <div class="tab-pane" id="csharp">
                <pre style="overflow: auto; max-height:41.5em; min-height:41.5em;">
<code class="line-numbers language-csharp">
public class DepthFirstSearch
{
    private Graph&lt;string&gt; graph; 
    private bool[] visited;
    public DepthFirstSearch(Graph&lt;string&gt; graph)
    {
        this.graph = graph;
        visited = new bool[graph.CountNodes()];
    } 
    public void doDFS(int start)
    {
        Node&lt;string&gt; lastNode;       
        Stack&lt;Node&lt;string&gt;&gt; stack = new Stack&lt;Node&lt;string&gt;&gt;();
        var startNode = graph.GetNode(start);

        stack.Push(startNode);

        while (stack.Any())
        {
            var v = stack.Pop();
            lastNode = v;

            if (!visited[v.Id])
            {
                visited[v.Id] = true;

                var neigbours = v.EdgeList;
                foreach (var neigbour in neigbours)
                {
                    if (visited[neigbour.DestinationId]) continue;
                    stack.Push(graph.GetNode(neigbour.DestinationId));
                }
            }
        }
    }
}
</code>
                </pre>
            </div>
        </div>
    </div>
    <div class="col-lg-9 col-md-9 cyContainer">
        <div class="col-lg-10 col-md-10">
            <div class="row">
                <div id="cy" class="cyGraph" style="height:600px;">

                </div>
            </div>
        </div>
        <div class="col-md-2 col-lg-2">
            <div class="row">
                <h2 style="text-align: center;">@ResManager.GetResource("Top")</h2>
            </div>
            <div class="row">
                <div id="cy" class="cyStack">

                </div>

            </div>
            <div class="row">
                <h2 style="text-align: center;">@ResManager.GetResource("Bottom")</h2>
            </div>
            
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-offset-3 col-md-9">
        @Html.Partial("_Player")
    </div>

</div>


@section scripts{
    <script src="~/Scripts/PageScripts/DFS.js"></script>
}